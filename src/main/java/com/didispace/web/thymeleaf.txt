常用标签：

	条件判断	th:if        ==  ge gt    lt   le
	                
	循环 th:each
			th:switch
			
	文本 th:text     字符串原样打印
			th:untext      解析html样式

	th:href="@{}"
	
	设置静态文件路径：
	spring.mvc.static-path-pattern=/static/**
	
	引入js文件
	<script  th:src="@{/static/js/test.js}"></script>

	<form th:action="@{/th/form}" th:object="${user}"   method="post"  th:method="post">
			<input type="text" th:field="*{name}"/>    field简化代码   id ="name" name="name" value="*{name}"
			<input type="submit"/>
	</form> 
	
	<select>
		<option th:selected="${user.name eq 'Z3'}"> 张三</option>
	</select>
	
	<tr th:each="obj:${userList}">
		<td th:text="${obj.name}">姓名</td>
		<td th:text="${obj.age}">年龄</td>
		<td th:text="${obj.desc}">描述</td>
	</tr>
	
	<div th:switch="${user.role}">
		<p th:case="#{aaa.role}">超级管理员</p>      读取常量
		<p th:case="'002'">VIP用户</p>
		<p th:case="'003'">普通用户</p>
	</div>
	
	
1、在templates下创建一个模板，取名   视图名：books.html
	<!DOCTYPE html>
	<html lang="en" xmlns:th="http://www.thymeleaf.org">
	<head>
	    <meta charset="UTF-8"></meta>
	    <title>图书列表</title>
	</head>
	<body>
	<table border="1">
	    <tr>
	        <td>图书编号</td>
	        <td>图书名称</td>
	        <td>图书作者</td>
	    </tr>
	    <tr th:each="book:${books}">
	        <td th:text="${book.id}"></td>
	        <td th:text="${book.name}"></td>
	        <td th:text="${book.author}"></td>
	    </tr>
	</table>
	</body>
	</html>

2、创建一个RestController,里面的方法返回ModelAndView
		@RequestMapping(value = "/books",method = RequestMethod.GET)
	    public ModelAndView books() {
	        List<Book> books = new ArrayList<>();
	        Book b1 = new Book();
	        b1.setId(1);
	        b1.setAuthor("罗贯中");
	        b1.setName("三国演义");
	        Book b2 = new Book();
	        b2.setId(2);
	        b2.setAuthor("曹雪芹");
	        b2.setName("红楼梦");
	        books.add(b1);
	        books.add(b2);
	        
	        ModelAndView mv = new ModelAndView();
	        mv.addObject("books", books);
	        mv.setViewName("books");
	        return mv;
	    }

2、或者使用ModelMap传值也可以，但是方法名要与模板名相同：/springboot-study/src/main/resources/templates/name1.html
	@RequestMapping("/name1")
    public String name(ModelMap map) {
    	
    	map.addAttribute("name", "许三多");
    	
    	Book b1 = new Book();
        b1.setId(1);
        b1.setAuthor("罗贯中");
        b1.setName("三国演义");
        map.addAttribute("books", b1);
        
    	return "name1";
    	｝

3、application.properties里增加配置
#是否开启缓存，开发时可设置为false，默认为true
spring.thymeleaf.cache=true

#是否检查模板是否存在，默认为true
spring.thymeleaf.check-template=true

#是否检查模板位置是否存在，默认为true
spring.thymeleaf.check-template-location=true

#模板文件编码
spring.thymeleaf.encoding=UTF-8

#模板文件位置
spring.thymeleaf.prefix=classpath:/templates

#Content-Type配置
spring.thymeleaf.servlet.content-type=text/html

#模板文件后缀
spring.thymeleaf.suffix=.html
